<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.5">

	<classes>
		<class id="Location">
			<methods>
				<method id="DisplayBareRelations" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-cmdbAbstractObject</type>
					<code><![CDATA[      public function DisplayBareRelations(WebPage $oPage, $bEditMode = false)
					{
						parent::DisplayBareRelations($oPage, $bEditMode);
	 
						// Module settings, defaults.
						$aGeomSettings = MetaModel::GetModuleSetting('jb-poc-class-location-geom', 'default', array( 
							'datacrs' => 'EPSG:3857',
							'datatypes' => Array('Point','LineString','Polygon'),
							'mapcrs' => 'EPSG:3857',
							'mapcenter' =>  [ 358652.11242031807, 6606360.84951076 ],
							'mapzoom' => 17,
							'format' => 'WKT'
						)); 
						
						// Module settings, specifics. In XML, most nodes seem to start with a non-capital.
						if( MetaModel::GetModuleSetting('jb-poc-class-location-geom', strtolower(get_class($this)), '') != '') {
							
							$aClassSpecificSettings = MetaModel::GetModuleSetting('jb-poc-class-location-geom', strtolower(get_class($this)), array() ); 
							
							foreach( $aClassSpecificSettings as $k => $v ) {
								$aGeomSettings[$k] = $v;
							} 
							
						}
						
						
						$sGeomString = ( $aGeomSettings["dataformat"] == 'GeoJSON' ? addcslashes($this->Get('geom'), '"') : $this->Get('geom') ); 
						
						$sTabName = Dict::S('Location:Geometry');
						$oPage->SetCurrentTab($sTabName); 
						
						// It seems iTop just outputs a script as text if you set it in $oPage->add()? 
						
						$oPage->add_linked_stylesheet("https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.1.3/css/ol.css");
						$oPage->add_linked_script("https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v5.1.3/build/ol.js");
						
						if( $bEditMode ) {
							$oPage->add('<button type="button" id="geomClear">'.Dict::S('UI:Geom:Clear').'</button> | 
								<select id="geomType">
							');

							foreach( $aGeomSettings["datatypes"] as $k => $v ){
								$oPage->add('<option value="'.$v.'">'.Dict::S('UI:Geom:'.$v).'</option>'); 
							} 
									
							$oPage->add('
								</select>
							');
						}
						
						$oPage->add('</button><br><div id="ol-map" class="ol-map" style="width: 100%; height: 500px;"></div>');

						
						// 'add_script' is also a method
						// be careful what EPSG to select!
						// for testing purposes, we'll try to detect if Geometry was saved in GeoJSON or WKT and read it anyway
						// for geom.oFeature, use single quotes on the outside. Inner quotes will have been escaped.
						$oPage->add_ready_script('
							  
							geom = {};
							geom.oFormat = {
								WKT: new ol.format.WKT(),
								GeoJSON: new ol.format.GeoJSON()
							};
							geom.oFeatures = [];
							geom.oFeature = ( \''.$sGeomString.'\' != \'\' ? geom.oFormat.'.( preg_match('/^{"type":"Feature",.*/', $sGeomString) == TRUE ? 'GeoJSON' : 'WKT' ).'.readFeature(\''.$sGeomString.'\', { dataProjection: "'.$aGeomSettings["datacrs"].'", featureProjection: "'.$aGeomSettings["mapcrs"].'" }) : null );
							
							if( geom.oFeature !== null ) {
								geom.oFeatures.push( geom.oFeature );
							}
							
							geom.oVectorSource = new ol.source.Vector({ 
								features: geom.oFeatures
							});
							
							geom.oVectorLayer = new ol.layer.Vector({ 
								source: geom.oVectorSource, 
								style: ol_style
							});					

							if( geom.oFeature === null ) {
								geom.oCenter = [ '.$aGeomSettings["mapcenter"][0].', '.$aGeomSettings["mapcenter"][1].' ];
							}
							else {
								geom.oCenter = [ 
									( geom.oFeature.getGeometry().getExtent()[0] + geom.oFeature.getGeometry().getExtent()[2] ) / 2,
									( geom.oFeature.getGeometry().getExtent()[1] + geom.oFeature.getGeometry().getExtent()[3] ) / 2,
								];
							}
						 
							// Center: EPSG:3857 - [ 358652.11242031807, 6606360.84951076 ]
							geom.oMap = new ol.Map({
								target: "ol-map",
								layers: [
									// OpenLayers: the last layer you add, is on top.
									new ol.layer.Tile({
										source: new ol.source.OSM()
									}), 
									geom.oVectorLayer 
								],
								view: new ol.View({
									center: geom.oCenter,
									zoom: "'.$aGeomSettings["mapzoom"].'",
									projection: "'.$aGeomSettings["mapcrs"].'"
								})
							});
							
						
							// For some reason, OpenLayers displays a blank map, until you call updateSize() on the ol.Map object.
							// Could this have to do with iTop tab behavior? Further investigation needed, only seems to work on second click now (might just appear to do so). 
							// Not sure if it is an iTop (or Zend) issue, or OpenLayers. 
							// Work-around seems to be to add a minor delay before executing the ol.Map.updateSize() method
							// The tab container  
							$("ul[role=\'tablist\'] > li > a > span:contains(\''.$sTabName.'\')").parent().parent().on("click", function(evt){  
								setTimeout( function(){ geom.oMap.updateSize(); }, 1000);
							});
											
								 
							// Hide or disable ( textarea in edit mode! ). Click event will not work here (to show Geometry tab)
							// Alternatively, you could do this with CSS
							$("div[data-attcode=\'geom\']").hide();
							
							// Style function.
							/* 
								// If you want to do something with vertices, you could use:
								geometry = feature.getGeometry();
								geometry.forEachSegment(function(start,end){ 
									styles.push(
										new ol.style.Style({ 
											geometry: new Point(end), 
											image: new ol.style.Icon({ ... }) 
										}) 
									) 
								});
							*/
							
							function ol_style(feature) {
								switch( feature.getGeometry().getType() ) {
								
									case "Point": 
									
										return [
											new ol.style.Style({ 
												image: new ol.style.Circle({	
													radius: 10,
													fill: new ol.style.Fill({
													  color: "rgba(255, 0, 0, 0.6)"
													}),
													stroke: new ol.style.Stroke({
													  color: "rgba(255, 0, 0, 1)",
													  width: 1
													})
												})
											})
										];
										
									case "Polygon": 
									
										return [
											new ol.style.Style({ 
												fill: new ol.style.Fill({
												  color: "rgba(255, 0, 0, 0.6)"
												}),
												stroke: new ol.style.Stroke({
												  color: "rgba(255, 0, 0, 1)",
												  width: 1
												})										 
											})
										];
										
									case "LineString": 								
									
										return [
											new ol.style.Style({ 										
												fill: new ol.style.Fill({
												  color: "rgba(255, 0, 0, 0.6)"
												}),
												stroke: new ol.style.Stroke({
												  color: "rgba(255, 0, 0, 1)",
												  width: 1
												}) 
											})
										];
										
									default: 
										// Should not happen
										break;
								}
							}	
								 
								 
							// Fix: if you go to the Geometry tab first; then pick Modify, the map is not displayed properly either. 
							$(document).ready(function(){
								setTimeout( function(){ geom.oMap.updateSize(); }, 1000 );
							});

						');
							
						// View
						if (!$bEditMode)
						{
							
							$oPage->add_ready_script('
							
								// Nothing else needed for OpenLayers - view mode
								
							');
							
						}
						else {
						 
							$oPage->add_ready_script('
								
								// Editing requires extra interactions.
								
								geom.oDeleteCondition = function(mapBrowserEvent) {
									return ol.events.condition.click(mapBrowserEvent) && ol.events.condition.shiftKeyOnly(mapBrowserEvent)
								};
								
								// Modify has a deleteCondition, but it does not work with Points. 
								// It only works with vertex = where two lines meet.
								geom.oModify = new ol.interaction.Modify({ 
									source: geom.oVectorSource,
									deleteCondition: geom.oDeleteCondition
								});
								
								geom.oDraw = new ol.interaction.Draw({
									source: geom.oVectorSource,
									type: $("#geomType").val()
								});
								
								geom.oSnap = new ol.interaction.Snap({
									source: geom.oVectorSource
								});
								
								geom.oSelect = new ol.interaction.Select({
									condition: geom.oDeleteCondition
								});
								
								// Add interactions 
								geom.oMap.addInteraction( geom.oDraw );
								geom.oMap.addInteraction( geom.oModify );
								geom.oMap.addInteraction( geom.oSnap );
								// geom.oMap.addInteraction( geom.oSelect );
								
								// Remove feature (Point) on select. Both these implementations gave an error 
								// geom.oSelect.getFeatures().on("add", function(e){ ... });
								// geom.oSelect.on("select", function(e) { var features = e.target.features;  ... });
								
								  
								$("body").on("click", "#geomClear", function(e){
								
									// Remove
									geom.oFeature = null;
									geom.oVectorSource.clear();
																	
									// Save in geom field 
									$("textarea[name=\'attr_geom\']").val("");
									
								});
								
								$("#geomType").on("change", function(e){
					
									ol_changeDrawMode();
									
								});
									 
								// Get last drawn geometry type
								if( geom.oFeature !== null ) {
									$("#geomType").val( geom.oFeature.getGeometry().getType() );
									ol_changeDrawMode();
								}

							
								function ol_changeDrawMode() {
								
									geom.oMap.removeInteraction( geom.oDraw );
								
									geom.oDraw = new ol.interaction.Draw({
										source: geom.oVectorSource,
										type: $("#geomType").val()
									});
									
									geom.oDraw.on("drawend", function(e){
										
										var f = e.feature;
										var features = geom.oVectorSource.getFeatures();
										
										// Save in geom field 
										$("textarea[name=\'attr_geom\']").val( geom.oFormat.'.$aGeomSettings["dataformat"].'.writeFeature(f) );
										
										// Remove all except last (we only want one point)
										// No need to slide, f is not part of features yet when this event is triggered, it seems.
										$.each( features , function(i){
											geom.oVectorSource.removeFeature( features[i] );
										});
										
										geom.oFeature = e.feature;
								
									});
									
									geom.oMap.addInteraction( geom.oDraw );
									
								}
						
							');
						}
						
						
					}  ]]></code>
				</method>
			</methods>

			<fields> 
				<!-- takes up to 64kb -->
				<field id="geom" xsi:type="AttributeText" _delta="define">
					<sql>geom</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
			</fields>


			<presentation>
				<details>
					<items> 
						<item id="geom" _delta="define">
							<rank>150</rank>
						</item>
					</items>
				</details>
			</presentation>

		</class>
	</classes>
	
	<module_parameters>
		<parameters id="jb-poc-class-location-geom" _delta="define">
		
			<!-- Parameters are case sensitive! -->
			
			<!-- Defaults -->
			<default>
				<dataformat type="string" _delta="define">WKT</dataformat> <!-- WKT or GeoJSON -->
				<datacrs type="string" _delta="define">EPSG:3857</datacrs>
				<datatypes type="array" _delta="define">
					<datatype id="0">Point</datatype>
					<datatype id="1">LineString</datatype>
					<datatype id="2">Polygon</datatype>
				</datatypes>
				<mapcrs type="string" _delta="define">EPSG:3857</mapcrs>				
				<mapcenter type="array" _delta="define">
					<coord id="0">358652.11242031807</coord>
					<coord id="1">6606360.84951076</coord>
				</mapcenter>
				<mapzoom type="int" _delta="define">17</mapzoom>
			</default>
			
			<!-- Class specific, but write in lowercase (XML convention) -->
			<location>
				<datatypes type="array" _delta="define">
					<datatype id="0">Point</datatype>
					<datatype id="2">Polygon</datatype>
				</datatypes>				
			</location>
			
			
		</parameters>
	</module_parameters>
	 
</itop_design>

