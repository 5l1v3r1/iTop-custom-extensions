						<?php
//
// File generated by ... on the 2019-10-02T13:01:07+0200
// Please do not edit manually
//

/**
 * Classes and menus for jb-crab (version 2.4.180215)
 *
 * @author      iTop compiler
 * @license     http://opensource.org/licenses/AGPL-3.0
 */



class CrabCity extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'state_attcode' => '',
			'reconc_keys' => array('name'),
			'db_table' => 'crabcity',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jb-crab/images/crabcity.png',
			'uniqueness_rules' => array (
  'unique_name' => 
  array (
    'attributes' => 
    array (
      0 => 'name',
    ),
    'filter' => NULL,
    'disabled' => NULL,
    'is_blocking' => NULL,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeString("name", array("allowed_values"=>null, "sql"=>'name', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSet("streets_list", array("linked_class"=>'CrabStreet', "ext_key_to_me"=>'city_id', "count_min"=>0, "count_max"=>0, "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:CrabCity:baseinfo' => 
    array (
      0 => 'name',
      1 => 'streets_list',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'name',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'name',
));
;
	}


}


class CrabStreet extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('name'),
			'state_attcode' => '',
			'reconc_keys' => array('crab_id', 'name', 'status'),
			'db_table' => 'crabstreet',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jb-crab/images/crabstreet.png',
			'uniqueness_rules' => array (
  'unique_crab_id' => 
  array (
    'attributes' => 
    array (
      0 => 'crab_id',
    ),
    'filter' => NULL,
    'disabled' => NULL,
    'is_blocking' => NULL,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeDecimal("crab_id", array("allowed_values"=>null, "sql"=>'crab_id', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "digits"=>10, "decimals"=>0, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("city_id", array("targetclass"=>'CrabCity', "allowed_values"=>null, "sql"=>'city_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("name", array("allowed_values"=>null, "sql"=>'crab_street', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("status", array("allowed_values"=>new ValueSetEnum("1,2,3,4"), "display_style"=>'list', "sql"=>'status', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeLinkedSet("addresses_list", array("linked_class"=>'CrabAddress', "ext_key_to_me"=>'street_id', "count_min"=>0, "count_max"=>0, "allowed_values"=>null, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:CrabStreet:baseinfo' => 
    array (
      0 => 'crab_id',
      1 => 'name',
      2 => 'status',
      3 => 'addresses_list',
    ),
  ),
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'crab_id',
  1 => 'name',
  2 => 'status',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'crab_id',
  1 => 'name',
  2 => 'status',
));
;
	}


}


class CrabAddress extends cmdbAbstractObject
{
	public static function Init()
	{
		$aParams = array(			'category' => 'bizmodel,searchable',
			'key_type' => 'autoincrement',
			'name_attcode' => array('street_id_friendlyname', 'house_number', 'sub_number', 'apartment_number'),
			'state_attcode' => '',
			'reconc_keys' => array('crab_id', 'street_id', 'house_number', 'apartment_number', 'sub_number'),
			'db_table' => 'crabaddress',
			'db_key_field' => 'id',
			'db_finalclass_field' => '',
			'icon' => utils::GetAbsoluteUrlModulesRoot().'jb-crab/images/crabaddress.png',
			'uniqueness_rules' => array (
  'unique_crab_id' => 
  array (
    'attributes' => 
    array (
      0 => 'crab_id',
    ),
    'filter' => NULL,
    'disabled' => NULL,
    'is_blocking' => NULL,
  ),
),);
		MetaModel::Init_Params($aParams);
		MetaModel::Init_InheritAttributes();
		MetaModel::Init_AddAttribute(new AttributeDecimal("crab_id", array("allowed_values"=>null, "sql"=>'crab_id', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "digits"=>10, "decimals"=>0, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeExternalKey("street_id", array("targetclass"=>'CrabStreet', "allowed_values"=>null, "sql"=>'street_id', "is_null_allowed"=>false, "on_target_delete"=>DEL_AUTO, "depends_on"=>array(), "display_style"=>'select', "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("house_number", array("allowed_values"=>null, "sql"=>'house_number', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeEnum("status", array("allowed_values"=>new ValueSetEnum("1,2,3,4,5,99"), "display_style"=>'list', "sql"=>'status', "default_value"=>'', "is_null_allowed"=>false, "depends_on"=>array(), "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("apartment_number", array("allowed_values"=>null, "sql"=>'apartment_number', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "digits"=>10, "decimals"=>0, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeString("sub_number", array("allowed_values"=>null, "sql"=>'sub_number', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "digits"=>10, "decimals"=>0, "always_load_in_tables"=>false)));
		MetaModel::Init_AddAttribute(new AttributeText("geom", array("allowed_values"=>null, "sql"=>'geom', "default_value"=>'', "is_null_allowed"=>true, "depends_on"=>array(), "always_load_in_tables"=>false)));



		MetaModel::Init_SetZListItems('details', array (
  'col:col1' => 
  array (
    'fieldset:CrabAddress:baseinfo' => 
    array (
      0 => 'crab_id',
      1 => 'street_id',
      2 => 'house_number',
      3 => 'apartment_number',
      4 => 'sub_number',
    ),
  ),
  0 => 'geom',
));
		MetaModel::Init_SetZListItems('standard_search', array (
  0 => 'crab_id',
  1 => 'street_id',
  2 => 'house_number',
  3 => 'apartment_number',
  4 => 'sub_number',
));
		MetaModel::Init_SetZListItems('list', array (
  0 => 'crab_id',
  1 => 'street_id',
  2 => 'house_number',
  3 => 'apartment_number',
  4 => 'sub_number',
));
;
	}


}
//
// Menus
//
class MenuCreation_jb_crab extends ModuleHandlerAPI
{
	public static function OnMenuCreation()
	{
		global $__comp_menus__; // ensure that the global variable is indeed global !
		$__comp_menus__['ConfigManagement'] = new MenuGroup('ConfigManagement', 20 , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['NewCrabStreet'] = new NewObjectMenuNode('NewCrabStreet', 'CrabStreet', $__comp_menus__['ConfigManagement']->GetIndex(), 901 , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchCrabStreet'] = new SearchMenuNode('SearchCrabStreet', 'CrabStreet', $__comp_menus__['ConfigManagement']->GetIndex(), 902, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['NewCrabAddress'] = new NewObjectMenuNode('NewCrabAddress', 'CrabAddress', $__comp_menus__['ConfigManagement']->GetIndex(), 901 , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
		$__comp_menus__['SearchCrabAddress'] = new SearchMenuNode('SearchCrabAddress', 'CrabAddress', $__comp_menus__['ConfigManagement']->GetIndex(), 902, null , null, UR_ACTION_MODIFY, UR_ALLOWED_YES, null);
	}
} // class MenuCreation_jb_crab
