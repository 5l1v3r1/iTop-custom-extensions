<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.6">
	<classes>
		<class id="UserRequest">
			<fields>
				<!-- Add phone number (derived from caller_id -> Person) -->
				<field id="caller_phone" xsi:type="AttributeExternalField" _delta="define">
					<extkey_attcode>caller_id</extkey_attcode>
					<target_attcode>phone</target_attcode>
					<dependencies>
						<attribute id="phone"/>
					</dependencies>
				</field>
				<!-- Add reminder field -->
				<field id="reminder" xsi:type="AttributeDateTime" _delta="define">
					<sql>reminder</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<!-- Add third party org and ref -->
				<field id="third_party_org_id" xsi:type="AttributeExternalKey" _delta="define">
					<sql>third_party_org_id</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
					<on_target_delete>DEL_AUTO</on_target_delete>
					<target_class>Organization</target_class>
				</field>
				<field id="third_party_ref" xsi:type="AttributeString" _delta="define">
					<sql>third_party_ref</sql>
					<default_value/>
					<is_null_allowed>true</is_null_allowed>
				</field>
				<!-- Always show lookup fields for Incident, Change, Problem -->
				<field id="parent_request_id" xsi:type="AttributeExternalKey">
					<max_combo_length _delta="define">0</max_combo_length>
				</field>
				<field id="parent_change_id" xsi:type="AttributeExternalKey">
					<max_combo_length _delta="define">0</max_combo_length>
				</field>
				<field id="parent_incident_id" xsi:type="AttributeExternalKey">
					<max_combo_length _delta="define">0</max_combo_length>
				</field>
				<field id="parent_problem_id" xsi:type="AttributeExternalKey">
					<max_combo_length _delta="define">0</max_combo_length>
				</field>
				<!-- Adds two extra options to 'origin' -->
				<field id="origin" xsi:type="AttributeEnum">
					<values>
						<value id="in_person" _delta="define">in_person</value>
						<value id="monitoring" _delta="define">monitoring</value>
					</values>
				</field>
				<!-- Changes the default value to 3 (a person) instead of 1 (a department) -->
				<field id="impact" xsi:type="AttributeEnum">
					<default_value _delta="redefine">3</default_value>
				</field>
			</fields>
			<lifecycle>
				<states> 
					<state id="new">
						<flags>

							<!-- Public log in 'new' state: often you comment in public log, but the notification will never be sent. Only after creating/assigning the ticket, this will work properly. -->
							<attribute id="public_log">
								<hidden/>
							</attribute>

							<!-- Hide solution, solution_code. We log things in private log instead. -->
							<attribute id="solution">
								<hidden _delta="merge"/>
							</attribute>
							<attribute id="resolution_code">
								<hidden _delta="merge"/>
							</attribute>

						</flags>
					</state>
					<state id="assigned">

						<!-- Public log in 'new' state: often you comment in public log, but the notification will never be sent. Only after creating/assigning the ticket, this will work properly. -->
						<flags>
							<attribute id="public_log"/>
						</flags>

					</state>             
					<state id="resolved">
						<flags>

							<!-- Never make org_id and the caller_id read-only (default) -->					
							<attribute id="org_id">
								<read_only _delta="delete"/>
							</attribute>		
							
							<attribute id="caller_id">
								<read_only _delta="delete"/>
							</attribute>

							<!-- Never make the title read-only -->							
							<attribute id="title">
								<read_only _delta="delete"/>
							</attribute>

							<!-- Hide solution, solution_code. We log things in private log instead. So it shouldn't prompt either and is definitely NOT mandatory. -->
							<attribute id="solution">
								<hidden _delta="merge"/>
								<mandatory _delta="delete"/>
								<must_prompt _delta="delete"/>
							</attribute>
							<attribute id="resolution_code">
								<hidden _delta="merge"/>
								<mandatory _delta="delete"/>
								<must_prompt _delta="delete"/>
							</attribute>
						</flags>
					</state>
					<state id="closed">
						<flags>
							<!-- Never make changing categories read-only -->
							<attribute id="service_id">
								<read_only _delta="delete"/>
							</attribute>
							<attribute id="servicesubcategory_id">
								<read_only _delta="delete"/>
							</attribute>						
						</flags>
					</state>
				</states>
			</lifecycle>
			<methods>
				<!-- 
					Prevent automatically computed impacted items from being linked to this class.
					This does not modify the tab Impact Analysis, which will work exactly like before.
					
					There used to be modifications to the OnInsert() and OnUpdate() methods of a Change.
					However, there were also some other minor changes by Combodo in between iTop versions. 
					Nowadays it seems easier to give this class its own harmless UpdateImpactedItems() method.
					UpdateImpactedItems() is inherited from the Ticket class.
				-->
				<method id="UpdateImpactedItems" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-DBObject</type>
					<code><![CDATA[
						public function UpdateImpactedItems()
						{
							// Do nothing
						}]]>
					</code>
				</method>
				 <methods>
				<method id="PrefillCreationForm" _delta="define">
					<static>false</static>
					<access>public</access>
					<type>Overload-DBObject</type>
					<arguments>
						<argument id="1">
							<type>reference</type>
							<mandatory>true</mandatory>
						</argument>
					</arguments>
					<code><![CDATA[
					
					public function PrefillTransitionForm(&$aContextParam) {
						
						// Automatically set '(re)assign' to current user
						// Example from https://www.itophub.io/wiki/page?id=2_7_0%3Acustomization%3Aform_prefill#prefill_transition_form
					
						$oPerson = \UserRights::GetContactObject();
						// If we have a Person associated with the current User 
						// and we are in an assignment transition 
						if($oPerson && ($aContextParam['stimulus'] == 'ev_assign' || $aContextParam['stimulus'] == 'ev_reassign')) {
							
							$iTicketAgentId = $this->Get('agent_id');
							$iPersonId = $oPerson->GetKey();

							// If the agent is not already the current user
							if($iTicketAgentId != $iPersonId) {
							
								// Check if the current Contact can be assigned to this ticket
								// = There is a team and Contact is part of that team
								$iTicketTeamId = $this->Get('team_id'); 

								$oTeamLinkSet = $oPerson->Get('team_list');
								$bIsInTeam = false;
								while($oTeamLink = $oTeamLinkSet->Fetch()) {
									// We don't use GetKey as it would return the key of the link object
									$iTeam = $oTeamLink->Get('team_id');
									if ($iTicketTeamId == $iTeam) { 
										$bIsInTeam = true;
										break;
									}
								}
								if($bIsInTeam == true) {
									$this->Set('agent_id',$iPersonId);
									// As we modified a potential MUST CHANGE value, we'll take care of it by removing this flag
									if(array_key_exists('agent_id', $aContextParam['expected_attributes'])) {
										$aContextParam['expected_attributes']['agent_id'] = ~OPT_ATT_MUSTCHANGE & $aContextParam['expected_attributes']['agent_id'];
									}
								}
								
							}
						}
					}
					
						]]>
					</code>
					</method>
				</methods>
			</methods>
			<presentation>
				<details>
					<items>
						<item id="col:col1">
							<items>
								<!-- Add a field to show the caller's phone number -->
								<item id="fieldset:Ticket:baseinfo">
									<items>
										<item id="caller_phone" _delta="define">
											<rank>21</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
						<item id="col:col2">
							<items>
								<!-- Add reminder field to presentation -->
								<item id="fieldset:Ticket:date">
									<items>
										<item id="reminder" _delta="define">
										  <rank>69</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
						<item id="col:col3">
							<items>
								<item id="fieldset:UserRequest:ThirdParty" _delta="define">
									<rank>110</rank>
									<items>
										<item id="third_party_org_id">
											<rank>1</rank>
										</item>
										<item id="third_party_ref">
											<rank>11</rank>
										</item>
									</items>
								</item>
							</items>
						</item>
					</items>
				</details>
			</presentation>
		</class>
	</classes>
</itop_design>
