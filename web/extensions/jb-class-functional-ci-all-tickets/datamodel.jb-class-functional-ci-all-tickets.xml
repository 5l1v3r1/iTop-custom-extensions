<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.6">
  <classes>
    <class id="FunctionalCI">
      <methods> 
        <method id="DisplayBareRelations"> 
          <code _delta="redefine"><![CDATA[	function DisplayBareRelations(WebPage $oPage, $bEditMode = false)
	{
		parent::DisplayBareRelations($oPage, $bEditMode);

		$sTicketListAttCode = 'tickets_list';

		if (MetaModel::IsValidAttCode(get_class($this), $sTicketListAttCode))
		{
			// Display one list per leaf class (the only way to display the status as of now)

			$oAttDef = MetaModel::GetAttributeDef(get_class($this), $sTicketListAttCode);
			$sLnkClass = $oAttDef->GetLinkedClass();
			$sExtKeyToMe = $oAttDef->GetExtKeyToMe();
			$sExtKeyToRemote = $oAttDef->GetExtKeyToRemote();

			$iTotal = 0;
			$aSearches = array();

			foreach (MetaModel::EnumChildClasses('Ticket') as $sSubClass)
			{
				if (!MetaModel::HasChildrenClasses($sSubClass))
				{
					$sStateAttCode = MetaModel::GetStateAttributeCode($sSubClass);
					if ($sStateAttCode != '')
					{
					    // Todo: base the search condition on operational_status = 'ongoing' for a more flexible behavior
						$oSearch = DBSearch::FromOQL("SELECT $sSubClass AS t JOIN $sLnkClass AS lnk ON lnk.$sExtKeyToRemote = t.id WHERE lnk.$sExtKeyToMe = :myself ", array('myself' => $this->GetKey()));
						$aSearches[$sSubClass] = $oSearch;

						$oSet = new DBObjectSet($oSearch);
						$iTotal += $oSet->Count();
					}
				}
			}

			$sCount = ($iTotal > 0) ? ' ('.$iTotal.')' : '';
			$oPage->SetCurrentTab(Dict::S('Class:FunctionalCI/Tab:Tickets').$sCount);

			foreach ($aSearches as $sSubClass => $oSearch)
			{
				$sBlockId = __class__.'_opened_'.$sSubClass;
		
				$oPage->add('<fieldset>');
				$oPage->add('<legend>'.MetaModel::GetName($sSubClass).'</legend>');
				$oBlock = new DisplayBlock($oSearch, 'list', false);
				$oBlock->Display($oPage, $sBlockId, array('menu' => false));
				$oPage->add('</fieldset>');
			}
		}
	}]]></code>
        </method>
      </methods> 
    </class>
	</classes>
</itop_design>
